apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app: matrix-pod
  name: matrix-pod
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: matrix-pod
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: matrix-pod
    spec:
      securityContext:
        runAsUser: 991
        runAsGroup: 991
      initContainers:
      - name: matrix-init
        image: matrixdotorg/synapse:latest
        args:
          - generate
        envFrom:
          - configMapRef:
              name: matrix-config
        volumeMounts:
        - name: matrix-volume
          mountPath: /data
      containers:
      - name: matrix-run
        image: matrixdotorg/synapse
        imagePullPolicy: Always
        volumeMounts:
        - name: matrix-volume
          mountPath: /data
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: matrix-volume
        persistentVolumeClaim:
          claimName: matrix-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: matrix-claim
  namespace: {{ .Release.Namespace }}
  labels:
    app: matrix-pod
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: matrix-pod
  name: matrix-client-svc
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: client
    port: 8008
    protocol: TCP
    targetPort: 8008
  selector:
    app: matrix-pod
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: matrix-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/{{ .Values.issuer.type}}: "{{ .Values.issuer.type }}"

spec:
  tls:
  - hosts:
    - matrix.{{ .Values.domainName }}
    - {{ .Values.domainName }}
    secretName: matrix-tls
  rules:
  - host: matrix.{{ .Values.domainName }}
    http:
      paths:
      - path: /_matrix/identity
        backend:
          serviceName: matrix-3pid-svc
          servicePort: 8090
      - path: /_matrix
        backend:
          serviceName: matrix-client-svc
          servicePort: 8008
  - host: {{ .Values.domainName }}
    http:
      paths:
      - path: 
        backend:
          serviceName: matrix-client-svc
          servicePort: 8008

